from LotoBot.config import TOKEN, admin_id
from LotoBot.markups import *
from LotoBot.db_manager import *
from utils import *

import telebot



bot = telebot.TeleBot(TOKEN)




# ==============================================================
# User Interface

@bot.message_handler(commands=['start'])
def start_user_message(message):
    create_user(message.chat.id, message.chat.first_name)
    bot.send_message(message.chat.id,
                     '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LotoBot!',
                     reply_markup=start_menu())


@bot.message_handler(func=lambda message: message.text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã' and
                                          get_variables_stage(message.chat.id) == 'user')
def get_contacts_user_message(message):
    bot.send_message(message.chat.id,
                     '–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞ üë®‚Äçüíª @DenisDarahan',  # TODO: change admin
                     reply_markup=start_menu())


@bot.message_handler(func=lambda message: message.text == 'üè° –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç' and
                                          get_variables_stage(message.chat.id) == 'user')
def get_private_room_user_message(message):
    bot.send_message(message.chat.id,
                     'üè°   <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>   üè°\n\n'
                     'üí≥ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {} —Ä—É–±\n'
                     'üé≤ –£—á–∞—Å—Ç–∏–π –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö: {} —Ä–∞–∑(–∞)'
                     ''.format(*get_variables_private_room_info(message.chat.id)),
                     parse_mode='HTML',
                     reply_markup=private_room_menu())


@bot.message_handler(func=lambda message: message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥' and
                                          get_variables_stage(message.chat.id) == 'user')
def get_contacts_user_message(message):
    bot.send_message(message.chat.id,
                     'üì∞ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>',
                     parse_mode='HTML',
                     reply_markup=start_menu())


@bot.message_handler(func=lambda message: message.text == 'üì• –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç' and
                                          get_variables_stage(message.chat.id) == 'user')
def start_raise_money(message):
    msg = bot.send_message(message.chat.id,
                           '–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:',
                           reply_markup=private_room_menu())
    bot.register_next_step_handler(msg, get_amount_to_raise)


def get_amount_to_raise(message):
    result = get_float_from_message(message.text)
    if result == 'exit':
        bot.send_message(message.chat.id,
                         'üì∞ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>',
                         parse_mode='HTML',
                         reply_markup=start_menu())
    elif result == 'not a number':
        bot.send_message(message.chat.id,
                         '–ö–∞–∂–µ—Ç—Å—è, –í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ...\n'
                         '–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å–Ω–æ–≤–∞:',
                         reply_markup=private_room_menu())
    else:
        msg = bot.send_message(message.chat.id,
                               '–ü—Ä–∏–Ω—è—Ç–æ!\n'
                               '–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {} —Ä—É–± {} –∫–æ–ø\n'
                               '–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚¨áÔ∏è\n\n'
                               '‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è   <b>–í–ê–ñ–ù–û</b>   ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n'
                               '<i>–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã - –∏–∑–º–µ–Ω—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ–ø–ª–∞—Ç–µ –ù–ï–õ–¨–ó–Ø!\n'
                               '–í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –í—ã —Ä–∏—Å–∫—É–µ—Ç–µ –ø–æ—Ç–µ—Ä—è—Ç—å –í–∞—à–∏ –¥–µ–Ω—å–≥–∏!</i>'.format(*result),
                               parse_mode='HTML',
                               reply_markup=raise_money_account(message.chat.id, *result))
        time.sleep(3)
        bot.send_message(message.chat.id,
                         '–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–ª–∞—Ç–µ–∂–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è\n'
                         '–û–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç, –ø—Ä–æ—à–ª–∞ –ª–∏ –æ–ø–ª–∞—Ç–∞',
                         reply_markup=check_raise_money_account(msg.message_id))


@bot.callback_query_handler(func=lambda call: call.data[:12] == 'check_money_')
def check_raise_money_payment_message(call):
    res = check_payment(call.message.chat.id)
    if res:
        msg_id = int(call.data[12:])
        update_variables_cur_payment(call.message.chat.id, '')
        real_amount = update_variables_amount(call.message.chat.id, res)
        bot.delete_message(call.message.chat.id, msg_id)
        bot.delete_message(call.message.chat.id, msg_id + 1)
        bot.send_message(call.message.chat.id,
                         '<b>–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω!</b>\n\n'
                         '    + {:.2f} üí¥ RUB\n'
                         'üí≥ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {:.2f} —Ä—É–±'.format(res, real_amount),
                         parse_mode='HTML',
                         reply_markup=private_room_menu())
        bot.answer_callback_query(call.id, '–£—Å–ø–µ—Ö!')
    else:
        bot.answer_callback_query(call.id, '–û–ø–ª–∞—Ç–∞ –µ—â–µ –Ω–µ –ø—Ä–æ—à–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–∑–∂–µ')




# ==============================================================
# Admin Interface

@bot.message_handler(commands=['admin'], func=lambda message: message.chat.id == admin_id)
def start_admin_message(message):
    update_variables_stage(admin_id, 'admin')
    bot.send_message(message.chat.id,
                     'üèõ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å',
                     reply_markup=start_admin_menu())


@bot.message_handler(func=lambda message: message.text == '‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' and
                                          get_variables_stage(message.chat.id) == 'admin')
def get_to_main_menu_admin_message(message):
    update_variables_stage(admin_id, 'user')
    bot.send_message(message.chat.id,
                     'üì∞ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>',
                     parse_mode='HTML',
                     reply_markup=start_menu())


@bot.message_handler(func=lambda message: message.text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' and
                                          get_variables_stage(message.chat.id) == 'admin')
def get_statistic_admin_message(message):
    bot.send_message(message.chat.id,
                     'üìä    <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n'
                     '–ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π: {}\n'
                     '–°—É–º–º–∞ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –±–∞–Ω–∫–æ–≤: {} —Ä—É–±\n'
                     '–ó–∞—Ä–∞–±–æ—Ç–æ–∫: {} —Ä—É–±'.format(*get_statistic_all()),
                     parse_mode='HTML',
                     reply_markup=start_admin_menu())




if __name__ == '__main__':
    bot.polling(none_stop=True, timeout=20)
